{'mm': Matrix([
[1, 0, 0, 0, 0, 0, 0, 0, 0, 0,                         0,                                                                 0,                                                                                     0,       0,       0,       0,                0,        0,        0],
[0, 1, 0, 0, 0, 0, 0, 0, 0, 0,                         0,                                                                 0,                                                                                     0,       0,       0,       0,                0,        0,        0],
[0, 0, 1, 0, 0, 0, 0, 0, 0, 0,                         0,                                                                 0,                                                                                     0,       0,       0,       0,                0,        0,        0],
[0, 0, 0, 1, 0, 0, 0, 0, 0, 0,                         0,                                                                 0,                                                                                     0,       0,       0,       0,                0,        0,        0],
[0, 0, 0, 0, 1, 0, 0, 0, 0, 0,                         0,                                                                 0,                                                                                     0,       0,       0,       0,                0,        0,        0],
[0, 0, 0, 0, 0, 1, 0, 0, 0, 0,                         0,                                                                 0,                                                                                     0,       0,       0,       0,                0,        0,        0],
[0, 0, 0, 0, 0, 0, 1, 0, 0, 0,                         0,                                                                 0,                                                                                     0,       0,       0,       0,                0,        0,        0],
[0, 0, 0, 0, 0, 0, 0, 1, 0, 0,                         0,                                                                 0,                                                                                     0,       0,       0,       0,                0,        0,        0],
[0, 0, 0, 0, 0, 0, 0, 0, 1, 0,                         0,                                                                 0,                                                                                     0,       0,       0,       0,                0,        0,        0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 1,                         0,                                                                 0,                                                                                     0,       0,       0,       0,                0,        0,        0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, subx_6 + 2.81223888256237,                                                            subx_9,                                                                               subx_11, subx_27, subx_41, subx_47, 2.80506312422904,        0,        0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0,                    subx_9, 2.80311499304904*subx_48 + 0.00298411727808333*subx_49 + 0.002888,                                                                               subx_50, subx_56, subx_61, subx_67,           subx_9, 0.000804, 0.000804],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0,                   subx_11,                                                           subx_50, 0.00298411727808333*subx_48 + 2.80311499304904*subx_49 + subx_6 + 0.00717575833333333, subx_68, subx_70, subx_71,          subx_11,        0,        0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0,                   subx_27,                                                           subx_56,                                                                               subx_68,    2.39,       0,       0,          subx_27,        0,        0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0,                   subx_41,                                                           subx_61,                                                                               subx_70,       0,    2.39,       0,          subx_41,        0,        0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0,                   subx_47,                                                           subx_67,                                                                               subx_71,       0,       0,    2.39,          subx_47,        0,        0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0,          2.80506312422904,                                                            subx_9,                                                                               subx_11, subx_27, subx_41, subx_47, 2.80506312422904,        0,        0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0,                         0,                                                          0.000804,                                                                                     0,       0,       0,       0,                0, 0.000804,        0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0,                         0,                                                          0.000804,                                                                                     0,       0,       0,       0,                0,        0, 0.000804]]), 'inputs': [right_motor_torque0(t), left_motor_torque0(t)], 'states': [quat0(t), quat1(t), quat2(t), quat3(t), pos0(t), pos1(t), pos2(t), pole_theta0(t), lwheel_theta0(t), rwheel_theta0(t), ang_vel0(t), ang_vel1(t), ang_vel2(t), vel0(t), vel1(t), vel2(t), pole_omega0(t), lwheel_omega0(t), rwheel_omega0(t)], 'subx': [(subx_0, lwheel_theta0(t)), (subx_1, cos(subx_0)), (subx_2, rwheel_theta0(t)), (subx_3, cos(subx_2)), (subx_4, sin(subx_0)), (subx_5, sin(subx_2)), (subx_6, 0.000402*subx_1**2 + 0.000402*subx_3**2 + 0.000402*subx_4**2 + 0.000402*subx_5**2), (subx_7, pole_theta0(t)), (subx_8, sin(subx_7)), (subx_9, -0.03225178*subx_8), (subx_10, cos(subx_7)), (subx_11, 0.03225178*subx_10), (subx_12, quat3(t)), (subx_13, quat0(t)), (subx_14, 2*subx_13), (subx_15, subx_12*subx_14), (subx_16, quat1(t)), (subx_17, quat2(t)), (subx_18, 2*subx_17), (subx_19, subx_16*subx_18), (subx_20, -subx_15 + subx_19), (subx_21, subx_10*subx_20), (subx_22, subx_13*subx_18), (subx_23, subx_12*subx_16), (subx_24, 2*subx_23), (subx_25, subx_22 + subx_24), (subx_26, subx_25*subx_8), (subx_27, 1.82685*subx_21 + 1.82685*subx_26), (subx_28, subx_14*subx_16), (subx_29, -subx_28), (subx_30, subx_12*subx_18), (subx_31, subx_29 + subx_30), (subx_32, subx_31*subx_8), (subx_33, subx_17**2), (subx_34, subx_12**2), (subx_35, -subx_34), (subx_36, subx_13**2), (subx_37, subx_16**2), (subx_38, subx_36 - subx_37), (subx_39, subx_33 + subx_35 + subx_38), (subx_40, subx_10*subx_39), (subx_41, 1.82685*subx_32 + 1.82685*subx_40), (subx_42, subx_28 + subx_30), (subx_43, subx_10*subx_42), (subx_44, -subx_33), (subx_45, subx_34 + subx_38 + subx_44), (subx_46, subx_45*subx_8), (subx_47, 1.82685*subx_43 + 1.82685*subx_46), (subx_48, subx_10**2), (subx_49, subx_8**2), (subx_50, 2.80013087577096*subx_10*subx_8), (subx_51, subx_21 + subx_26), (subx_52, 0.018916*subx_8), (subx_53, subx_10*subx_25 - subx_20*subx_8), (subx_54, 0.018916*subx_10), (subx_55, -1.82685*subx_33 - 1.82685*subx_34 + 1.82685*subx_36 + 1.82685*subx_37), (subx_56, -subx_10*subx_55 - subx_51*subx_52 - subx_53*subx_54), (subx_57, subx_10*subx_31 - subx_39*subx_8), (subx_58, subx_32 + subx_40), (subx_59, subx_15 + subx_19), (subx_60, 1.82685*subx_10), (subx_61, -subx_52*subx_58 - subx_54*subx_57 - subx_59*subx_60), (subx_62, subx_43 + subx_46), (subx_63, subx_10*subx_45), (subx_64, subx_42*subx_8), (subx_65, subx_63 - subx_64), (subx_66, -subx_22 + subx_24), (subx_67, -subx_52*subx_62 - subx_54*subx_65 - subx_60*subx_66), (subx_68, subx_51*subx_54 - subx_52*subx_53 - subx_55*subx_8), (subx_69, 1.82685*subx_8), (subx_70, -subx_52*subx_57 + subx_54*subx_58 - subx_59*subx_69), (subx_71, -subx_52*subx_65 + subx_54*subx_62 - subx_66*subx_69), (subx_72, ang_vel0(t)), (subx_73, 0.5*subx_72), (subx_74, ang_vel1(t)), (subx_75, 0.5*subx_17), (subx_76, ang_vel2(t)), (subx_77, 0.5*subx_76), (subx_78, 0.5*subx_74), (subx_79, vel0(t)), (subx_80, vel1(t)), (subx_81, vel2(t)), (subx_82, pole_omega0(t)), (subx_83, lwheel_omega0(t)), (subx_84, rwheel_omega0(t)), (subx_85, subx_29 - subx_30), (subx_86, 1/sqrt(2*subx_42*subx_85 + subx_85**2 + 1)), (subx_87, 0.092*subx_86), (subx_88, subx_85*subx_87), (subx_89, subx_88 + 0.11375), (subx_90, subx_42*subx_89), (subx_91, pos2(t)), (subx_92, 10000.0*subx_91), (subx_93, 920.0*subx_86 + subx_92), (subx_94, subx_87 + subx_91), (subx_95, pi**2), (subx_96, 4302.0*subx_95), (subx_97, 0.11375*subx_72), (subx_98, subx_72*subx_88), (subx_99, subx_97 + subx_98), (subx_100, 0.11375*subx_76), (subx_101, -subx_76*subx_88), (subx_102, -subx_100 + subx_101), (subx_103, 43.02*pi), (subx_104, (-subx_103*(subx_102*subx_66 + subx_45*subx_99 + subx_81) - subx_96*(subx_90 + subx_94))*(0.5*erf(10000.0*subx_90 + subx_93) + 0.5)), (subx_105, subx_74 + subx_84), (subx_106, subx_35 + subx_36 + subx_37 + subx_44), (subx_107, subx_106*subx_72 + subx_25*subx_76), (subx_108, subx_102*subx_59 + subx_31*subx_99 + subx_80 - subx_87*(subx_105*subx_20 + subx_107)), (subx_109, subx_31*subx_76 + subx_59*subx_72), (subx_110, subx_102*subx_106 + subx_25*subx_99 + subx_79 + subx_87*(subx_105*subx_39 + subx_109)), (subx_111, sqrt(Abs(subx_108)**2 + Abs(subx_110)**2)), (subx_112, 1/subx_111), (subx_113, Piecewise((subx_108*subx_112, subx_111 > 0.0), (0.0, True))), (subx_114, -subx_104), (subx_115, Piecewise((0, subx_114 < 0), (subx_114, True))), (subx_116, Piecewise((12000.0*subx_111, subx_111 < 0.0001), (-2000.0*subx_111 + 1.4, And(subx_111 < 0.0002, subx_111 >= 0.0001)), (1.00000000000000, True))), (subx_117, subx_115*subx_116), (subx_118, subx_113*subx_117), (subx_119, Piecewise((subx_110*subx_112, subx_111 > 0.0), (1.00000000000000, True))), (subx_120, subx_117*subx_119), (subx_121, subx_88 - 0.11375), (subx_122, subx_121*subx_42), (subx_123, subx_100 + subx_101), (subx_124, -subx_97 + subx_98), (subx_125, (-subx_103*(subx_123*subx_66 + subx_124*subx_45 + subx_81) - subx_96*(subx_122 + subx_94))*(0.5*erf(10000.0*subx_122 + subx_93) + 0.5)), (subx_126, subx_74 + subx_83), (subx_127, subx_123*subx_59 + subx_124*subx_31 + subx_80 - subx_87*(subx_107 + subx_126*subx_20)), (subx_128, subx_106*subx_123 + subx_124*subx_25 + subx_79 + subx_87*(subx_109 + subx_126*subx_39)), (subx_129, sqrt(Abs(subx_127)**2 + Abs(subx_128)**2)), (subx_130, 1/subx_129), (subx_131, Piecewise((subx_127*subx_130, subx_129 > 0.0), (0.0, True))), (subx_132, -subx_125), (subx_133, Piecewise((0, subx_132 < 0), (subx_132, True))), (subx_134, Piecewise((12000.0*subx_129, subx_129 < 0.0001), (-2000.0*subx_129 + 1.4, And(subx_129 < 0.0002, subx_129 >= 0.0001)), (1.00000000000000, True))), (subx_135, subx_133*subx_134), (subx_136, subx_131*subx_135), (subx_137, Piecewise((subx_128*subx_130, subx_129 > 0.0), (1.00000000000000, True))), (subx_138, subx_135*subx_137), (subx_139, 0.000804*subx_74), (subx_140, subx_139 + 0.000804*subx_83), (subx_141, subx_1*subx_72), (subx_142, subx_4*subx_76), (subx_143, subx_141 - subx_142), (subx_144, 0.000402*subx_141 - 0.000402*subx_142), (subx_145, 0.000402*subx_126*subx_72 - 0.000402*subx_72*subx_74), (subx_146, -0.000402*subx_126*subx_76 + 0.000402*subx_74*subx_76), (subx_147, subx_1*subx_145 - subx_126*subx_144 + subx_140*subx_143 + subx_146*subx_4), (subx_148, subx_139 + 0.000804*subx_84), (subx_149, subx_3*subx_72), (subx_150, subx_5*subx_76), (subx_151, subx_149 - subx_150), (subx_152, 0.000402*subx_149 - 0.000402*subx_150), (subx_153, subx_72*subx_74), (subx_154, subx_105*subx_72 - subx_153), (subx_155, 0.000402*subx_3), (subx_156, subx_74*subx_76), (subx_157, -subx_105*subx_76 + subx_156), (subx_158, 0.000402*subx_5), (subx_159, -subx_105*subx_152 + subx_148*subx_151 + subx_154*subx_155 + subx_157*subx_158), (subx_160, subx_4*subx_72), (subx_161, subx_1*subx_76), (subx_162, 0.000402*subx_160 + 0.000402*subx_161), (subx_163, subx_160 + subx_161), (subx_164, subx_1*subx_146 + subx_126*subx_162 - subx_140*subx_163 - subx_145*subx_4), (subx_165, subx_5*subx_72), (subx_166, subx_3*subx_76), (subx_167, 0.000402*subx_165 + 0.000402*subx_166), (subx_168, subx_165 + subx_166), (subx_169, subx_105*subx_167 - subx_148*subx_168 - subx_154*subx_158 + subx_155*subx_157), (subx_170, 0.092*subx_113*subx_115*subx_116*subx_86), (subx_171, 0.092*subx_131*subx_133*subx_134*subx_86), (subx_172, 0.092*subx_115*subx_116*subx_119*subx_86), (subx_173, 0.092*subx_133*subx_134*subx_137*subx_86), (subx_174, subx_10*subx_76), (subx_175, subx_74*subx_8), (subx_176, subx_174 - subx_175), (subx_177, subx_10*subx_74), (subx_178, subx_76*subx_8), (subx_179, 0.00417793333333333*subx_177 + 0.00417793333333333*subx_178), (subx_180, 0.00937333333333334*subx_177 + 0.00937333333333334*subx_178), (subx_181, 0.108888707562375*subx_177 + 0.108888707562375*subx_178), (subx_182, subx_177 + subx_178), (subx_183, 9.891512475e-5*subx_174 - 9.891512475e-5*subx_175), (subx_184, 0.00241793333333333*subx_174 - 0.00241793333333333*subx_175), (subx_185, 2.0e-5*subx_174 - 2.0e-5*subx_175), (subx_186, -0.023645*subx_177 - 0.023645*subx_178), (subx_187, subx_72 + subx_82), (subx_188, -0.915*subx_177 - 0.915*subx_178), (subx_189, -0.265*subx_177 - 0.265*subx_178), (subx_190, -1.705*subx_177 - 1.705*subx_178), (subx_191, 0.03225178*subx_82), (subx_192, 0.5*erf(-18300.0*subx_63 + 18300.0*subx_64 + subx_92) + 0.5), (subx_193, -subx_103*(subx_62*(1.83*subx_72 + 1.83*subx_82) + subx_66*(-1.83*subx_177 - 1.83*subx_178) + subx_81) - subx_96*(-1.83*subx_63 + 1.83*subx_64 + subx_91)), (subx_194, subx_176*subx_179 + subx_176*subx_180 + subx_176*subx_181 - 0.35685*subx_176*subx_188 - 0.106*subx_176*subx_189 - 1.364*subx_176*subx_190 + subx_177*subx_191 + subx_178*subx_191 - subx_182*subx_183 - subx_182*subx_184 - subx_182*subx_185 + 1.364*subx_186*subx_187 + 1.83*subx_192*subx_193*subx_62 + 17.9150958675*subx_43 + 17.9150958675*subx_46), (subx_195, subx_151*subx_167), (subx_196, 0.00657333333333333*subx_72 + 0.00657333333333333*subx_82), (subx_197, subx_153 - subx_187*subx_74), (subx_198, subx_10*subx_197), (subx_199, subx_187*subx_76 - subx_72*subx_76), (subx_200, subx_199*subx_8), (subx_201, subx_179*subx_187 - subx_182*subx_196 + 0.00241793333333333*subx_198 - 0.00241793333333333*subx_200), (subx_202, 0.00937333333333334*subx_72 + 0.00937333333333334*subx_82), (subx_203, subx_180*subx_187 - subx_182*subx_202 + 2.0e-5*subx_198 - 2.0e-5*subx_200), (subx_204, 0.108888707562375*subx_72 + 0.108888707562375*subx_82), (subx_205, subx_181*subx_187 - subx_182*subx_204 + 9.891512475e-5*subx_198 - 9.891512475e-5*subx_200), (subx_206, -subx_152*subx_168), (subx_207, subx_10*subx_199), (subx_208, subx_197*subx_8), (subx_209, subx_176*subx_202 - subx_185*subx_187 + 0.00937333333333334*subx_207 + 0.00937333333333334*subx_208), (subx_210, subx_176*subx_196 - subx_184*subx_187 + 0.00417793333333333*subx_207 + 0.00417793333333333*subx_208), (subx_211, subx_176*subx_204 - subx_183*subx_187 + 0.108888707562375*subx_207 + 0.108888707562375*subx_208), (subx_212, 0.8*subx_10*subx_76 - 0.8*subx_74*subx_8), (subx_213, -0.018916*subx_10*subx_74 - 0.018916*subx_76*subx_8), (subx_214, 0.018916*subx_82), (subx_215, -subx_177*subx_214 - subx_178*subx_214 - subx_187*subx_213 + subx_190*subx_212), (subx_216, 0.023645*subx_8), (subx_217, 0.023645*subx_174 - 0.023645*subx_175 + 1.705*subx_72 + 1.705*subx_82), (subx_218, -subx_174*subx_214 + subx_175*subx_214 - 0.8*subx_182*subx_190 + 0.8*subx_187*subx_217), (subx_219, 0.023645*subx_10), (subx_220, -2.32562*subx_10*subx_76*subx_82 - 1.364*subx_176*subx_217 + 1.364*subx_182*subx_186 + 2.32562*subx_74*subx_8*subx_82), (subx_221, 0.35685*subx_72 + 0.35685*subx_82), (subx_222, subx_74*subx_8*subx_82), (subx_223, subx_10*subx_76*subx_82), (subx_224, -subx_176*subx_221 + 0.35685*subx_222 - 0.35685*subx_223), (subx_225, 0.915*subx_10), (subx_226, -0.02809*subx_10*subx_76*subx_82 - 0.106*subx_176*(0.265*subx_72 + 0.265*subx_82) + 0.02809*subx_74*subx_8*subx_82), (subx_227, 7.84524*subx_43 + 7.84524*subx_46), (subx_228, 7.84524*subx_63 - 7.84524*subx_64), (subx_229, 26.7522684*subx_12*subx_16 - 26.7522684*subx_13*subx_17), (subx_230, -7.649109*subx_13*subx_17 + 7.649109*subx_23), (subx_231, 2.0789886*subx_12*subx_16 - 2.0789886*subx_13*subx_17), (subx_232, 1.83*subx_192*subx_193*subx_66), (subx_233, subx_170*subx_20), (subx_234, -subx_172*subx_39), (subx_235, subx_143*subx_162 - subx_144*subx_163 + subx_171*subx_20 - subx_173*subx_39), (subx_236, -subx_88), (subx_237, 0.915*subx_8), (subx_238, 0.092*subx_25*subx_86), (subx_239, 0.02275*subx_72**2), (subx_240, 0.02275*subx_76**2), (subx_241, subx_239 + subx_240), (subx_242, -subx_239 - subx_240), (subx_243, -0.39*subx_182*subx_188 + subx_187*subx_221), (subx_244, 0.106*subx_72 + 0.106*subx_82), (subx_245, -0.4*subx_182*subx_189 + subx_187*subx_244), (subx_246, -subx_176*subx_244 + 0.106*subx_222 - 0.106*subx_223), (subx_247, subx_182*subx_213 - subx_212*subx_217 + 1.364*subx_222 - 1.364*subx_223), (subx_248, 0.39*subx_176*subx_188), (subx_249, 0.4*subx_176*subx_189)], 'fo': Matrix([
subx_12*subx_77 - subx_16*subx_73 - subx_74*subx_75],
subx_12*subx_78 + subx_13*subx_73 + subx_75*subx_76],
subx_12*subx_73 + subx_13*subx_78 - subx_16*subx_77],
subx_13*subx_77 + subx_16*subx_78 - subx_17*subx_73],
[                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                subx_79],
subx_80],
subx_81],
subx_82],
subx_83],
subx_84],
[                                                                                                                                                                                                                                                                                                                                                  -subx_1*subx_164 + subx_106*subx_170 + subx_106*subx_171 + subx_121*(subx_125*subx_45 - subx_136*subx_31 - subx_138*subx_25) - subx_147*subx_4 - 0.00589575833333333*subx_156 - subx_159*subx_5 - subx_169*subx_3 - subx_172*subx_59 - subx_173*subx_59 + subx_194 + subx_89*(subx_104*subx_45 - subx_118*subx_31 - subx_120*subx_25)],
[                                                                                                                                                                                                                                                                                            -subx_10*subx_209 - subx_10*subx_210 - subx_10*subx_211 + subx_10*subx_220 + subx_10*subx_226 - subx_10*subx_229 - subx_10*subx_231 - subx_10*subx_232 + subx_195 + subx_201*subx_8 + subx_203*subx_8 + subx_205*subx_8 + subx_206 + subx_215*subx_216 - subx_216*subx_227 + subx_218*subx_219 - subx_219*subx_228 + subx_224*subx_225 - subx_225*subx_230 + subx_233 + subx_234 + subx_235],
[-subx_1*subx_147 - subx_10*subx_201 - subx_10*subx_203 - subx_10*subx_205 + subx_118*subx_238 + subx_136*subx_238 + 0.00589575833333333*subx_153 - subx_159*subx_3 + subx_164*subx_4 + subx_169*subx_5 - subx_172*subx_31 - subx_173*subx_31 - subx_209*subx_8 - subx_210*subx_8 - subx_211*subx_8 - subx_215*subx_219 + subx_216*subx_218 - subx_216*subx_228 + subx_219*subx_227 + subx_220*subx_8 + subx_224*subx_237 + subx_226*subx_8 - subx_229*subx_8 - subx_230*subx_237 - subx_231*subx_8 - subx_232*subx_8 + (subx_236 - 0.11375)*(subx_104*subx_66 - subx_106*subx_120 - subx_118*subx_59) + (subx_236 + 0.11375)*(-subx_106*subx_138 + subx_125*subx_66 - subx_136*subx_59)],
[                                                                                                                                                                                                                                                                                                                                                                                                                                               -subx_106*subx_224 - subx_106*subx_246 - subx_106*subx_247 - subx_120 - subx_138 - subx_20*subx_241 - subx_20*subx_242 - subx_215*subx_51 - subx_218*subx_53 - subx_243*subx_53 - subx_245*subx_53 - subx_248*subx_51 - subx_249*subx_51],
[                                                                                                                                                                                                                                                                                                                                                                                                                                                  -subx_118 - subx_136 - subx_215*subx_58 - subx_218*subx_57 - subx_224*subx_59 - subx_241*subx_39 - subx_242*subx_39 - subx_243*subx_57 - subx_245*subx_57 - subx_246*subx_59 - subx_247*subx_59 - subx_248*subx_58 - subx_249*subx_58],
[                                                                                                                                                                                                                                                                                                                                                                                                                  subx_104 + subx_125 + subx_192*subx_193 - subx_215*subx_62 - subx_218*subx_65 - subx_224*subx_66 - subx_241*subx_42 - subx_242*subx_42 - subx_243*subx_65 - subx_245*subx_65 - subx_246*subx_66 - subx_247*subx_66 - subx_248*subx_62 - subx_249*subx_62 + 23.4376545],
subx_194 - 25.2455681180614*subx_7*subx_95 - 8.41518937268713*pi*subx_82],
subx_235 + left_motor_torque0(t)],
subx_195 + subx_206 + subx_233 + subx_234 + right_motor_torque0(t)]])}